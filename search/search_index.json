{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 \ud83d\udcd8 Projectile Motion: Range vs. Angle of Projection 1. \ud83c\udf93 Theoretical Foundation Equations of Motion Assuming no air resistance and launch from ground level: Initial velocity: \ud835\udc63 0 v 0 \u200b Projection angle: \ud835\udf03 \u03b8 Gravitational acceleration: \ud835\udc54 g Break down the initial velocity: \ud835\udc63 0 \ud835\udc65 = \ud835\udc63 0 cos \u2061 ( \ud835\udf03 ) v 0x \u200b =v 0 \u200b cos(\u03b8) \ud835\udc63 0 \ud835\udc66 = \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) v 0y \u200b =v 0 \u200b sin(\u03b8) Time of Flight: Since projectile returns to the ground (symmetric motion): \ud835\udc47 2 \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \ud835\udc54 T= g 2v 0 \u200b sin(\u03b8) \u200b Range \ud835\udc45 R: \ud835\udc45 = \ud835\udc63 0 \ud835\udc65 \u22c5 \ud835\udc47 = \ud835\udc63 0 cos \u2061 ( \ud835\udf03 ) \u22c5 2 \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \ud835\udc54 = \ud835\udc63 0 2 sin \u2061 ( 2 \ud835\udf03 ) \ud835\udc54 R=v 0x \u200b \u22c5T=v 0 \u200b cos(\u03b8)\u22c5 g 2v 0 \u200b sin(\u03b8) \u200b = g v 0 2 \u200b sin(2\u03b8) \u200b This is the key formula for range as a function of angle. Family of Solutions Each pair ( \ud835\udc63 0 , \ud835\udf03 ) (v 0 \u200b ,\u03b8) generates a unique trajectory: For fixed \ud835\udc63 0 v 0 \u200b , range is maximized at \ud835\udf03 = 45 \u2218 \u03b8=45 \u2218 . \ud835\udf03 \u03b8 and 90 \u2218 \u2212 \ud835\udf03 90 \u2218 \u2212\u03b8 yield the same range (e.g., 30\u00b0 and 60\u00b0). \ud83d\udcca Range Analysis Effect of Initial Velocity: \ud835\udc45 \u221d \ud835\udc63 0 2 \u21d2 Doubling \ud835\udc63 0 \u21d2 4x range increase R\u221dv 0 2 \u200b \u21d2Doubling v 0 \u200b \u21d24x range increase Effect of Gravitational Acceleration: \ud835\udc45 \u221d 1 \ud835\udc54 \u21d2 Weaker gravity (e.g., Moon) yields larger range R\u221d g 1 \u200b \u21d2Weaker gravity (e.g., Moon) yields larger range Graphical Behavior: \ud835\udc45 ( \ud835\udf03 ) R(\u03b8) is symmetric about 45 \u2218 45 \u2218 Maximum at \ud835\udf03 = 45 \u2218 \u03b8=45 \u2218 \ud835\udc45 ( 0 \u2218 ) = \ud835\udc45 ( 90 \u2218 ) = 0 R(0 \u2218 )=R(90 \u2218 )=0 \ud83c\udf0d Practical Applications Non-ideal Terrain: If launched from height \u210e h, vertical motion modifies to: \ud835\udc66 ( \ud835\udc61 ) = \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \ud835\udc61 \u2212 1 2 \ud835\udc54 \ud835\udc61 2 + \u210e y(t)=v 0 \u200b sin(\u03b8)t\u2212 2 1 \u200b gt 2 +h Solve \ud835\udc66 ( \ud835\udc61 ) = 0 y(t)=0 for new flight time, then compute range. Air Resistance: Adds drag force \ud835\udc39 \ud835\udc51 = \u2212 \ud835\udc58 \ud835\udc63 F d \u200b =\u2212kv No closed-form solution: need numerical methods (e.g., Euler, RK4) Real-World Relevance: Sports (soccer, golf) Ballistics and artillery Spacecraft launch angles (initial trajectories) \ud83d\udcbb Implementation in Python Here\u2019s a simple Python script using Matplotlib and NumPy: \ud83d\udea7 Limitations and Extensions Limitations: Ignores air resistance Assumes flat terrain Assumes constant \ud835\udc54 g Extensions: Add drag using numerical integration Vary terrain using elevation functions Use simulation platforms (e.g., PyBullet) for more realism \u2705 Deliverables Summary Component Description Markdown/Notebook Includes theory, code, plots Family of Solutions Parametric dependence of \ud835\udc45 R on \ud835\udf03 \u03b8, \ud835\udc63 0 v 0 \u200b , \ud835\udc54 g Graphical Representation Range vs angle plots for varying \ud835\udc63 0 v 0 \u200b , \ud835\udc54 g Limitations and Enhancements Drag, terrain, varying gravity, real-world applicability","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"\ud83d\udcd8 Projectile Motion: Range vs. Angle of Projection 1. \ud83c\udf93 Theoretical Foundation Equations of Motion Assuming no air resistance and launch from ground level: Initial velocity: \ud835\udc63 0 v 0 \u200b Projection angle: \ud835\udf03 \u03b8 Gravitational acceleration: \ud835\udc54 g Break down the initial velocity: \ud835\udc63 0 \ud835\udc65 = \ud835\udc63 0 cos \u2061 ( \ud835\udf03 ) v 0x \u200b =v 0 \u200b cos(\u03b8) \ud835\udc63 0 \ud835\udc66 = \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) v 0y \u200b =v 0 \u200b sin(\u03b8) Time of Flight: Since projectile returns to the ground (symmetric motion):","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#t","text":"2 \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \ud835\udc54 T= g 2v 0 \u200b sin(\u03b8) \u200b Range \ud835\udc45 R: \ud835\udc45 = \ud835\udc63 0 \ud835\udc65 \u22c5 \ud835\udc47 = \ud835\udc63 0 cos \u2061 ( \ud835\udf03 ) \u22c5 2 \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \ud835\udc54 = \ud835\udc63 0 2 sin \u2061 ( 2 \ud835\udf03 ) \ud835\udc54 R=v 0x \u200b \u22c5T=v 0 \u200b cos(\u03b8)\u22c5 g 2v 0 \u200b sin(\u03b8) \u200b = g v 0 2 \u200b sin(2\u03b8) \u200b This is the key formula for range as a function of angle. Family of Solutions Each pair ( \ud835\udc63 0 , \ud835\udf03 ) (v 0 \u200b ,\u03b8) generates a unique trajectory: For fixed \ud835\udc63 0 v 0 \u200b , range is maximized at \ud835\udf03 = 45 \u2218 \u03b8=45 \u2218 . \ud835\udf03 \u03b8 and 90 \u2218 \u2212 \ud835\udf03 90 \u2218 \u2212\u03b8 yield the same range (e.g., 30\u00b0 and 60\u00b0). \ud83d\udcca Range Analysis Effect of Initial Velocity: \ud835\udc45 \u221d \ud835\udc63 0 2 \u21d2 Doubling \ud835\udc63 0 \u21d2 4x range increase R\u221dv 0 2 \u200b \u21d2Doubling v 0 \u200b \u21d24x range increase Effect of Gravitational Acceleration: \ud835\udc45 \u221d 1 \ud835\udc54 \u21d2 Weaker gravity (e.g., Moon) yields larger range R\u221d g 1 \u200b \u21d2Weaker gravity (e.g., Moon) yields larger range Graphical Behavior: \ud835\udc45 ( \ud835\udf03 ) R(\u03b8) is symmetric about 45 \u2218 45 \u2218 Maximum at \ud835\udf03 = 45 \u2218 \u03b8=45 \u2218 \ud835\udc45 ( 0 \u2218 ) = \ud835\udc45 ( 90 \u2218 ) = 0 R(0 \u2218 )=R(90 \u2218 )=0 \ud83c\udf0d Practical Applications Non-ideal Terrain: If launched from height \u210e h, vertical motion modifies to: \ud835\udc66 ( \ud835\udc61 ) = \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \ud835\udc61 \u2212 1 2 \ud835\udc54 \ud835\udc61 2 + \u210e y(t)=v 0 \u200b sin(\u03b8)t\u2212 2 1 \u200b gt 2 +h Solve \ud835\udc66 ( \ud835\udc61 ) = 0 y(t)=0 for new flight time, then compute range. Air Resistance: Adds drag force \ud835\udc39 \ud835\udc51 = \u2212 \ud835\udc58 \ud835\udc63 F d \u200b =\u2212kv No closed-form solution: need numerical methods (e.g., Euler, RK4) Real-World Relevance: Sports (soccer, golf) Ballistics and artillery Spacecraft launch angles (initial trajectories) \ud83d\udcbb Implementation in Python Here\u2019s a simple Python script using Matplotlib and NumPy: \ud83d\udea7 Limitations and Extensions Limitations: Ignores air resistance Assumes flat terrain Assumes constant \ud835\udc54 g Extensions: Add drag using numerical integration Vary terrain using elevation functions Use simulation platforms (e.g., PyBullet) for more realism \u2705 Deliverables Summary Component Description Markdown/Notebook Includes theory, code, plots Family of Solutions Parametric dependence of \ud835\udc45 R on \ud835\udf03 \u03b8, \ud835\udc63 0 v 0 \u200b , \ud835\udc54 g Graphical Representation Range vs angle plots for varying \ud835\udc63 0 v 0 \u200b , \ud835\udc54 g Limitations and Enhancements Drag, terrain, varying gravity, real-world applicability","title":"\ud835\udc47"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 \ud83e\udded Forced Damped Pendulum: From Periodic Motion to Chaos 1. \ud83c\udf93 Theoretical Foundation Governing Equation The motion of a forced damped pendulum is described by the nonlinear differential equation: \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 sin \u2061 \ud835\udf03 = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b sin\u03b8=Acos(\u03c9t) Where: \ud835\udf03 ( \ud835\udc61 ) \u03b8(t): angle of displacement \ud835\udefd \u03b2: damping coefficient \ud835\udf14 0 = \ud835\udc54 / \ud835\udc3f \u03c9 0 \u200b = g/L \u200b : natural frequency of the pendulum \ud835\udc34 A: amplitude of the external driving torque \ud835\udf14 \u03c9: driving frequency Small-Angle Approximation For small angles ( sin \u2061 \ud835\udf03 \u2248 \ud835\udf03 sin\u03b8\u2248\u03b8), the equation simplifies to: \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 \ud835\udf03 = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b \u03b8=Acos(\u03c9t) This is a driven damped harmonic oscillator, and it has a steady-state solution: \ud835\udf03 ( \ud835\udc61 ) = \ud835\udf03 steady ( \ud835\udc61 ) = \ud835\udc35 cos \u2061 ( \ud835\udf14 \ud835\udc61 \u2212 \ud835\udeff ) \u03b8(t)=\u03b8 steady \u200b (t)=Bcos(\u03c9t\u2212\u03b4) Where: \ud835\udc35 \ud835\udc34 ( \ud835\udf14 0 2 \u2212 \ud835\udf14 2 ) 2 + \ud835\udefd 2 \ud835\udf14 2 B= (\u03c9 0 2 \u200b \u2212\u03c9 2 ) 2 +\u03b2 2 \u03c9 2 \u200b A \u200b \ud835\udeff tan \u2061 \u2212 1 ( \ud835\udefd \ud835\udf14 \ud835\udf14 0 2 \u2212 \ud835\udf14 2 ) \u03b4=tan \u22121 ( \u03c9 0 2 \u200b \u2212\u03c9 2 \u03b2\u03c9 \u200b ) Maximum amplitude occurs at resonance: \ud835\udf14 res = \ud835\udf14 0 2 \u2212 \ud835\udefd 2 2 \u03c9 res \u200b = \u03c9 0 2 \u200b \u2212 2 \u03b2 2 \u200b \u200b \ud83d\udd2c Dynamics Analysis Influence of Parameters: Damping \ud835\udefd \u03b2: suppresses motion, reduces peak amplitude. Driving Amplitude \ud835\udc34 A: higher values can push system into chaotic regimes. Driving Frequency \ud835\udf14 \u03c9: determines whether motion is synchronized or chaotic. Types of Behavior: Periodic: motion repeats over time. Quasiperiodic: complex oscillation without repetition. Chaotic: sensitive dependence on initial conditions; no clear pattern. \ud83c\udf0d Practical Applications Energy Harvesting: devices convert oscillations into electrical energy. Engineering Structures: bridges, buildings under periodic forces. RLC Circuits: analogous equations describe voltage/current. Biomechanics: modeling leg movement in walking (e.g., gait analysis). \ud83d\udcbb Implementation (Python) Here\u2019s a Python script using scipy.integrate.solve_ivp to simulate and visualize behavior: \ud83e\udde9 Advanced Visualizations Phase Portrait: reveals oscillatory and chaotic states. Poincar\u00e9 Section: reveals regular vs chaotic motion. Bifurcation Diagram (optional): plot \ud835\udf03 \u03b8 vs driving force/frequency to study transitions. \u26a0\ufe0f Limitations and Extensions Limitation Suggested Extension Ignores nonlinear damping Add \u2212 \ud835\udefc \ud835\udf14 2 \u2212\u03b1\u03c9 2 term Periodic force only Introduce random or pulsed forcing Single pendulum Study coupled pendulums or pendulum on cart No energy input/output tracking Track system energy: \ud835\udc38 ( \ud835\udc61 ) E(t) \u2705 Deliverables Summary Component Description Theoretical Derivations Small-angle solutions + resonance Code Implementation RK45 simulation of pendulum Graphical Output \u03b8(t), phase plot, Poincar\u00e9 section Dynamic Analysis How parameters affect motion Limitations & Extensions Chaos, real-world constraints","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"\ud83e\udded Forced Damped Pendulum: From Periodic Motion to Chaos 1. \ud83c\udf93 Theoretical Foundation Governing Equation The motion of a forced damped pendulum is described by the nonlinear differential equation: \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 sin \u2061 \ud835\udf03 = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b sin\u03b8=Acos(\u03c9t) Where: \ud835\udf03 ( \ud835\udc61 ) \u03b8(t): angle of displacement \ud835\udefd \u03b2: damping coefficient \ud835\udf14 0 = \ud835\udc54 / \ud835\udc3f \u03c9 0 \u200b = g/L \u200b : natural frequency of the pendulum \ud835\udc34 A: amplitude of the external driving torque \ud835\udf14 \u03c9: driving frequency Small-Angle Approximation For small angles ( sin \u2061 \ud835\udf03 \u2248 \ud835\udf03 sin\u03b8\u2248\u03b8), the equation simplifies to: \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 \ud835\udf03 = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b \u03b8=Acos(\u03c9t) This is a driven damped harmonic oscillator, and it has a steady-state solution: \ud835\udf03 ( \ud835\udc61 ) = \ud835\udf03 steady ( \ud835\udc61 ) = \ud835\udc35 cos \u2061 ( \ud835\udf14 \ud835\udc61 \u2212 \ud835\udeff ) \u03b8(t)=\u03b8 steady \u200b (t)=Bcos(\u03c9t\u2212\u03b4) Where:","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#b","text":"\ud835\udc34 ( \ud835\udf14 0 2 \u2212 \ud835\udf14 2 ) 2 + \ud835\udefd 2 \ud835\udf14 2 B= (\u03c9 0 2 \u200b \u2212\u03c9 2 ) 2 +\u03b2 2 \u03c9 2 \u200b A \u200b","title":"\ud835\udc35"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#_1","text":"tan \u2061 \u2212 1 ( \ud835\udefd \ud835\udf14 \ud835\udf14 0 2 \u2212 \ud835\udf14 2 ) \u03b4=tan \u22121 ( \u03c9 0 2 \u200b \u2212\u03c9 2 \u03b2\u03c9 \u200b ) Maximum amplitude occurs at resonance: \ud835\udf14 res = \ud835\udf14 0 2 \u2212 \ud835\udefd 2 2 \u03c9 res \u200b = \u03c9 0 2 \u200b \u2212 2 \u03b2 2 \u200b \u200b \ud83d\udd2c Dynamics Analysis Influence of Parameters: Damping \ud835\udefd \u03b2: suppresses motion, reduces peak amplitude. Driving Amplitude \ud835\udc34 A: higher values can push system into chaotic regimes. Driving Frequency \ud835\udf14 \u03c9: determines whether motion is synchronized or chaotic. Types of Behavior: Periodic: motion repeats over time. Quasiperiodic: complex oscillation without repetition. Chaotic: sensitive dependence on initial conditions; no clear pattern. \ud83c\udf0d Practical Applications Energy Harvesting: devices convert oscillations into electrical energy. Engineering Structures: bridges, buildings under periodic forces. RLC Circuits: analogous equations describe voltage/current. Biomechanics: modeling leg movement in walking (e.g., gait analysis). \ud83d\udcbb Implementation (Python) Here\u2019s a Python script using scipy.integrate.solve_ivp to simulate and visualize behavior: \ud83e\udde9 Advanced Visualizations Phase Portrait: reveals oscillatory and chaotic states. Poincar\u00e9 Section: reveals regular vs chaotic motion. Bifurcation Diagram (optional): plot \ud835\udf03 \u03b8 vs driving force/frequency to study transitions. \u26a0\ufe0f Limitations and Extensions Limitation Suggested Extension Ignores nonlinear damping Add \u2212 \ud835\udefc \ud835\udf14 2 \u2212\u03b1\u03c9 2 term Periodic force only Introduce random or pulsed forcing Single pendulum Study coupled pendulums or pendulum on cart No energy input/output tracking Track system energy: \ud835\udc38 ( \ud835\udc61 ) E(t) \u2705 Deliverables Summary Component Description Theoretical Derivations Small-angle solutions + resonance Code Implementation RK45 simulation of pendulum Graphical Output \u03b8(t), phase plot, Poincar\u00e9 section Dynamic Analysis How parameters affect motion Limitations & Extensions Chaos, real-world constraints","title":"\ud835\udeff"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 \ud83c\udf0c Orbital Period vs. Radius: Kepler\u2019s Third Law and Gravitational Dynamics 1. \ud83e\udde0 Theoretical Foundation Newtonian Derivation of Kepler\u2019s Third Law (for Circular Orbits) From Newton\u2019s Law of Gravitation and centripetal force balance for a body in uniform circular motion: \ud835\udc39 gravity = \ud835\udc39 centripetal \u21d2 \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f 2 = \ud835\udc5a \ud835\udc63 2 \ud835\udc5f F gravity \u200b =F centripetal \u200b \u21d2 r 2 GMm \u200b = r mv 2 \u200b Cancel \ud835\udc5a m and solve for \ud835\udc63 v: \ud835\udc63 \ud835\udc3a \ud835\udc40 \ud835\udc5f v= r GM \u200b \u200b Orbital period \ud835\udc47 T is: \ud835\udc47 2 \ud835\udf0b \ud835\udc5f \ud835\udc63 = 2 \ud835\udf0b \ud835\udc5f \ud835\udc5f \ud835\udc3a \ud835\udc40 = 2 \ud835\udf0b \ud835\udc5f 3 \ud835\udc3a \ud835\udc40 T= v 2\u03c0r \u200b =2\u03c0r GM r \u200b \u200b =2\u03c0 GM r 3 \u200b \u200b Kepler\u2019s Third Law (Mathematical Form) \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc3a \ud835\udc40 \ud835\udc5f 3 T 2 = GM 4\u03c0 2 \u200b r 3 Where: \ud835\udc47 T: orbital period \ud835\udc5f r: orbital radius \ud835\udc40 M: mass of the central body \ud835\udc3a G: gravitational constant \ud83c\udf20 Implications in Astronomy Mass Calculation: By measuring \ud835\udc47 T and \ud835\udc5f r, the mass of a planet/star can be determined. Exoplanet Detection: Kepler\u2019s Law helps infer planetary characteristics from transit data. Satellite Launching: Determines altitude and velocity for geostationary orbits. Galactic Dynamics: Used to infer mass distribution in galaxies (including dark matter). \ud83c\udf0d Real-World Examples (a) Moon-Earth System: \ud835\udc5f \u2248 3.84 \u00d7 10 8 r\u22483.84\u00d710 8 m \ud835\udc47 \u2248 27.3 T\u224827.3 days (b) Planets in the Solar System: Compare \ud835\udc47 2 T 2 vs. \ud835\udc5f 3 r 3 for Mercury, Earth, Jupiter, etc. \ud83d\udcbb Python Simulation Here's a script to simulate circular orbits and verify the \ud835\udc47 2 \u221d \ud835\udc5f 3 T 2 \u221dr 3 relation: ] \ud83d\udcca Visualizations Graph Description T\u00b2 vs r\u00b3 Verifies linear relationship (Kepler\u2019s 3rd Law). log(T) vs log(r) Should yield a straight line with slope \u2248 1.5. Orbit visualization (optional) Can simulate 2D circular motion using parametric plots. \ud83d\udd2d Extension to Elliptical Orbits Kepler's Third Law for elliptical orbits still holds if \ud835\udc5f r is replaced with the semi-major axis \ud835\udc4e a: \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc3a \ud835\udc40 \ud835\udc4e 3 T 2 = GM 4\u03c0 2 \u200b a 3 This applies to: Eccentric planetary orbits Comets (e.g., Halley\u2019s) Binary star systems \u2705 Deliverables Summary Component Description Derivation Newton\u2019s laws \u2192 Kepler\u2019s Third Law Simulations Python model for \ud835\udc47 2 T 2 vs. \ud835\udc5f 3 r 3 Real-world data Planets and Moon orbits Graphs Confirm theoretical relationship Extensions Elliptical orbits, satellite applications","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"\ud83c\udf0c Orbital Period vs. Radius: Kepler\u2019s Third Law and Gravitational Dynamics 1. \ud83e\udde0 Theoretical Foundation Newtonian Derivation of Kepler\u2019s Third Law (for Circular Orbits) From Newton\u2019s Law of Gravitation and centripetal force balance for a body in uniform circular motion: \ud835\udc39 gravity = \ud835\udc39 centripetal \u21d2 \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f 2 = \ud835\udc5a \ud835\udc63 2 \ud835\udc5f F gravity \u200b =F centripetal \u200b \u21d2 r 2 GMm \u200b = r mv 2 \u200b Cancel \ud835\udc5a m and solve for \ud835\udc63 v:","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#v","text":"\ud835\udc3a \ud835\udc40 \ud835\udc5f v= r GM \u200b \u200b Orbital period \ud835\udc47 T is:","title":"\ud835\udc63"},{"location":"1%20Physics/2%20Gravity/Problem_1/#t","text":"2 \ud835\udf0b \ud835\udc5f \ud835\udc63 = 2 \ud835\udf0b \ud835\udc5f \ud835\udc5f \ud835\udc3a \ud835\udc40 = 2 \ud835\udf0b \ud835\udc5f 3 \ud835\udc3a \ud835\udc40 T= v 2\u03c0r \u200b =2\u03c0r GM r \u200b \u200b =2\u03c0 GM r 3 \u200b \u200b Kepler\u2019s Third Law (Mathematical Form) \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc3a \ud835\udc40 \ud835\udc5f 3 T 2 = GM 4\u03c0 2 \u200b r 3 Where: \ud835\udc47 T: orbital period \ud835\udc5f r: orbital radius \ud835\udc40 M: mass of the central body \ud835\udc3a G: gravitational constant \ud83c\udf20 Implications in Astronomy Mass Calculation: By measuring \ud835\udc47 T and \ud835\udc5f r, the mass of a planet/star can be determined. Exoplanet Detection: Kepler\u2019s Law helps infer planetary characteristics from transit data. Satellite Launching: Determines altitude and velocity for geostationary orbits. Galactic Dynamics: Used to infer mass distribution in galaxies (including dark matter). \ud83c\udf0d Real-World Examples (a) Moon-Earth System: \ud835\udc5f \u2248 3.84 \u00d7 10 8 r\u22483.84\u00d710 8 m \ud835\udc47 \u2248 27.3 T\u224827.3 days (b) Planets in the Solar System: Compare \ud835\udc47 2 T 2 vs. \ud835\udc5f 3 r 3 for Mercury, Earth, Jupiter, etc. \ud83d\udcbb Python Simulation Here's a script to simulate circular orbits and verify the \ud835\udc47 2 \u221d \ud835\udc5f 3 T 2 \u221dr 3 relation: ] \ud83d\udcca Visualizations Graph Description T\u00b2 vs r\u00b3 Verifies linear relationship (Kepler\u2019s 3rd Law). log(T) vs log(r) Should yield a straight line with slope \u2248 1.5. Orbit visualization (optional) Can simulate 2D circular motion using parametric plots. \ud83d\udd2d Extension to Elliptical Orbits Kepler's Third Law for elliptical orbits still holds if \ud835\udc5f r is replaced with the semi-major axis \ud835\udc4e a: \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc3a \ud835\udc40 \ud835\udc4e 3 T 2 = GM 4\u03c0 2 \u200b a 3 This applies to: Eccentric planetary orbits Comets (e.g., Halley\u2019s) Binary star systems \u2705 Deliverables Summary Component Description Derivation Newton\u2019s laws \u2192 Kepler\u2019s Third Law Simulations Python model for \ud835\udc47 2 T 2 vs. \ud835\udc5f 3 r 3 Real-world data Planets and Moon orbits Graphs Confirm theoretical relationship Extensions Elliptical orbits, satellite applications","title":"\ud835\udc47"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2 \ud83d\ude80 Escape and Cosmic Velocities: Foundations of Orbital Mechanics 1. \ud83c\udf0d Definitions: The Three Cosmic Velocities Cosmic Velocity Symbol Definition Use Case 1st \ud835\udc63 1 v 1 \u200b Minimum horizontal velocity needed for a circular orbit near the surface. Satellites, ISS, LEO. 2nd \ud835\udc63 2 v 2 \u200b Escape velocity: minimum velocity to leave a planet\u2019s gravitational field without propulsion. Interplanetary missions. 3rd \ud835\udc63 3 v 3 \u200b Minimum velocity to escape the gravitational field of the Sun, starting from Earth\u2019s orbit. Interstellar probes. \ud83d\udd0d Mathematical Derivations First Cosmic Velocity (Orbital Velocity) Derived by equating centripetal force with gravity: \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f 2 = \ud835\udc5a \ud835\udc63 1 2 \ud835\udc5f \u21d2 \ud835\udc63 1 = \ud835\udc3a \ud835\udc40 \ud835\udc5f r 2 GMm \u200b = r mv 1 2 \u200b \u200b \u21d2v 1 \u200b = r GM \u200b \u200b Second Cosmic Velocity (Escape Velocity) Derived using energy conservation: 1 2 \ud835\udc5a \ud835\udc63 2 2 = \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f \u21d2 \ud835\udc63 2 = 2 \ud835\udc3a \ud835\udc40 \ud835\udc5f = 2 \ud835\udc63 1 2 1 \u200b mv 2 2 \u200b = r GMm \u200b \u21d2v 2 \u200b = r 2GM \u200b \u200b = 2 \u200b v 1 \u200b Third Cosmic Velocity (Solar Escape from Earth Orbit) Escape velocity from the Sun, starting from a circular Earth orbit: \ud835\udc63 3 = \ud835\udc63 \ud835\udc52 \ud835\udc60 \ud835\udc50 , Sun 2 + \ud835\udc63 Earth orbit 2 \u2248 42.1 km/s v 3 \u200b = v esc,Sun 2 \u200b +v Earth orbit 2 \u200b \u200b \u224842.1 km/s 3. \ud83c\udf0e Compute for Earth, Mars, and Jupiter Parameters: Body Mass (kg) Radius (m) Earth 5.97 \u00d7 10 24 5.97\u00d710 24 6.371 \u00d7 10 6 6.371\u00d710 6 Mars 6.39 \u00d7 10 23 6.39\u00d710 23 3.389 \u00d7 10 6 3.389\u00d710 6 Jupiter 1.90 \u00d7 10 27 1.90\u00d710 27 6.9911 \u00d7 10 7 6.9911\u00d710 7 Python Script: 4. \ud83d\ude80 Real-World Applications Satellite Orbits: LEO: Requires \ud835\udc63 1 \u2248 7.9 km/s v 1 \u200b \u22487.9 km/s (Earth) GPS satellites use \ud835\udc63 1 v 1 \u200b for Medium Earth Orbits Interplanetary Travel: Rockets reach \ud835\udc63 2 v 2 \u200b to escape Earth (about 11.2 km/s) To reach Mars, a Hohmann transfer orbit is used Interstellar Missions: Probes like Voyager 1 achieved \ud835\udc63 3 \u2248 17 v 3 \u200b \u224817 km/s using gravity assists \ud83c\udf20 Graphical Representations Bar Chart: Compares \ud835\udc63 1 v 1 \u200b and \ud835\udc63 2 v 2 \u200b for different planets Function Plot (Optional): \ud835\udc63 1 ( \ud835\udc5f ) , \ud835\udc63 2 ( \ud835\udc5f ) vs. \ud835\udc5f v 1 \u200b (r), v 2 \u200b (r) vs. r 6. \ud83d\udccc Summary of Deliverables Component Description Derivations Full mathematical explanation of \ud835\udc63 1 v 1 \u200b , \ud835\udc63 2 v 2 \u200b , and \ud835\udc63 3 v 3 \u200b Simulations Python script with plots and numeric results Applications Launching satellites, interplanetary escape, space missions Visuals Velocity comparison across planets","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"\ud83d\ude80 Escape and Cosmic Velocities: Foundations of Orbital Mechanics 1. \ud83c\udf0d Definitions: The Three Cosmic Velocities Cosmic Velocity Symbol Definition Use Case 1st \ud835\udc63 1 v 1 \u200b Minimum horizontal velocity needed for a circular orbit near the surface. Satellites, ISS, LEO. 2nd \ud835\udc63 2 v 2 \u200b Escape velocity: minimum velocity to leave a planet\u2019s gravitational field without propulsion. Interplanetary missions. 3rd \ud835\udc63 3 v 3 \u200b Minimum velocity to escape the gravitational field of the Sun, starting from Earth\u2019s orbit. Interstellar probes. \ud83d\udd0d Mathematical Derivations First Cosmic Velocity (Orbital Velocity) Derived by equating centripetal force with gravity: \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f 2 = \ud835\udc5a \ud835\udc63 1 2 \ud835\udc5f \u21d2 \ud835\udc63 1 = \ud835\udc3a \ud835\udc40 \ud835\udc5f r 2 GMm \u200b = r mv 1 2 \u200b \u200b \u21d2v 1 \u200b = r GM \u200b \u200b Second Cosmic Velocity (Escape Velocity) Derived using energy conservation: 1 2 \ud835\udc5a \ud835\udc63 2 2 = \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f \u21d2 \ud835\udc63 2 = 2 \ud835\udc3a \ud835\udc40 \ud835\udc5f = 2 \ud835\udc63 1 2 1 \u200b mv 2 2 \u200b = r GMm \u200b \u21d2v 2 \u200b = r 2GM \u200b \u200b = 2 \u200b v 1 \u200b Third Cosmic Velocity (Solar Escape from Earth Orbit) Escape velocity from the Sun, starting from a circular Earth orbit: \ud835\udc63 3 = \ud835\udc63 \ud835\udc52 \ud835\udc60 \ud835\udc50 , Sun 2 + \ud835\udc63 Earth orbit 2 \u2248 42.1 km/s v 3 \u200b = v esc,Sun 2 \u200b +v Earth orbit 2 \u200b \u200b \u224842.1 km/s 3. \ud83c\udf0e Compute for Earth, Mars, and Jupiter Parameters: Body Mass (kg) Radius (m) Earth 5.97 \u00d7 10 24 5.97\u00d710 24 6.371 \u00d7 10 6 6.371\u00d710 6 Mars 6.39 \u00d7 10 23 6.39\u00d710 23 3.389 \u00d7 10 6 3.389\u00d710 6 Jupiter 1.90 \u00d7 10 27 1.90\u00d710 27 6.9911 \u00d7 10 7 6.9911\u00d710 7 Python Script: 4. \ud83d\ude80 Real-World Applications Satellite Orbits: LEO: Requires \ud835\udc63 1 \u2248 7.9 km/s v 1 \u200b \u22487.9 km/s (Earth) GPS satellites use \ud835\udc63 1 v 1 \u200b for Medium Earth Orbits Interplanetary Travel: Rockets reach \ud835\udc63 2 v 2 \u200b to escape Earth (about 11.2 km/s) To reach Mars, a Hohmann transfer orbit is used Interstellar Missions: Probes like Voyager 1 achieved \ud835\udc63 3 \u2248 17 v 3 \u200b \u224817 km/s using gravity assists \ud83c\udf20 Graphical Representations Bar Chart: Compares \ud835\udc63 1 v 1 \u200b and \ud835\udc63 2 v 2 \u200b for different planets Function Plot (Optional): \ud835\udc63 1 ( \ud835\udc5f ) , \ud835\udc63 2 ( \ud835\udc5f ) vs. \ud835\udc5f v 1 \u200b (r), v 2 \u200b (r) vs. r 6. \ud83d\udccc Summary of Deliverables Component Description Derivations Full mathematical explanation of \ud835\udc63 1 v 1 \u200b , \ud835\udc63 2 v 2 \u200b , and \ud835\udc63 3 v 3 \u200b Simulations Python script with plots and numeric results Applications Launching satellites, interplanetary escape, space missions Visuals Velocity comparison across planets","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3 \ud83c\udf0c Problem 3: Trajectories of a Freely Released Payload Near Earth \u2728 Motivation When a payload is released from a spacecraft or rocket near Earth, its trajectory can vary dramatically depending on the initial velocity and direction. The possible outcomes include: Elliptical orbits (payload remains bound), Parabolic trajectory (borderline escape), Hyperbolic trajectory (escape path), Suborbital trajectories (reentry to Earth). Understanding these trajectories is essential for: Satellite deployment, Space mission planning, Reentry capsule design. \u2696\ufe0f Theoretical Foundation Newton's Law of Universal Gravitation: \ud835\udc39 \u20d7 = \u2212 \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f 2 \ud835\udc5f ^ F =\u2212 r 2 GMm \u200b r ^ Acceleration: \ud835\udc4e \u20d7 = \u2212 \ud835\udc3a \ud835\udc40 \ud835\udc5f 3 \ud835\udc5f \u20d7 a =\u2212 r 3 GM \u200b r This second-order ODE can be integrated numerically using methods like Runge-Kutta. \ud83d\ude80 Orbital Trajectories Overview The type of trajectory is determined by the specific mechanical energy: \ud835\udf00 \ud835\udc63 2 2 \u2212 \ud835\udc3a \ud835\udc40 \ud835\udc5f \u03b5= 2 v 2 \u200b \u2212 r GM \u200b Energy \ud835\udf00 \u03b5 Trajectory Type Description \ud835\udf00 < 0 \u03b5<0 Elliptical orbit Bound orbit \ud835\udf00 = 0 \u03b5=0 Parabolic escape Marginal escape \ud835\udf00 0 \u03b5>0 Hyperbolic path Escape trajectory \ud83e\uddee Python Simulation Numerical Integration Using Runge-Kutta \ud83d\udcca Outputs and Interpretation Visual Result: Suborbital: Falls back to Earth. Circular: Maintains orbit. Escape (parabolic): Reaches escape trajectory. Hyperbolic: High-speed escape. Energy and Trajectory Table: Case Velocity (m/s) Energy \u03b5 Trajectory Suborbital 6500 < 0 Elliptic \u2192 Earth impact Circular ~7660 < 0 Elliptic Orbit Escape ~10800 = 0 Parabolic Escape Hyperbolic 12000 > 0 Hyperbolic Escape \ud83c\udf0d Applications Orbital Insertion: Used in satellite deployment (LEO, MEO, GEO). Space Missions: Escape velocity needed for Mars or interstellar travel. Reentry Capsules: Ensures safe Earth return by choosing suborbital paths. Debris Mitigation: Helps design controlled deorbit burns. \ud83e\udde0 Summary Deliverable Included Equations of motion \u2714 Simulation tool in Python \u2714 Visualization of trajectories \u2714 Classification of motion types \u2714 Real-world applications \u2714","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"\ud83c\udf0c Problem 3: Trajectories of a Freely Released Payload Near Earth \u2728 Motivation When a payload is released from a spacecraft or rocket near Earth, its trajectory can vary dramatically depending on the initial velocity and direction. The possible outcomes include: Elliptical orbits (payload remains bound), Parabolic trajectory (borderline escape), Hyperbolic trajectory (escape path), Suborbital trajectories (reentry to Earth). Understanding these trajectories is essential for: Satellite deployment, Space mission planning, Reentry capsule design. \u2696\ufe0f Theoretical Foundation Newton's Law of Universal Gravitation: \ud835\udc39 \u20d7 = \u2212 \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f 2 \ud835\udc5f ^ F =\u2212 r 2 GMm \u200b r ^ Acceleration: \ud835\udc4e \u20d7 = \u2212 \ud835\udc3a \ud835\udc40 \ud835\udc5f 3 \ud835\udc5f \u20d7 a =\u2212 r 3 GM \u200b r This second-order ODE can be integrated numerically using methods like Runge-Kutta. \ud83d\ude80 Orbital Trajectories Overview The type of trajectory is determined by the specific mechanical energy:","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#_1","text":"\ud835\udc63 2 2 \u2212 \ud835\udc3a \ud835\udc40 \ud835\udc5f \u03b5= 2 v 2 \u200b \u2212 r GM \u200b Energy \ud835\udf00 \u03b5 Trajectory Type Description \ud835\udf00 < 0 \u03b5<0 Elliptical orbit Bound orbit \ud835\udf00 = 0 \u03b5=0 Parabolic escape Marginal escape \ud835\udf00 0 \u03b5>0 Hyperbolic path Escape trajectory \ud83e\uddee Python Simulation Numerical Integration Using Runge-Kutta \ud83d\udcca Outputs and Interpretation Visual Result: Suborbital: Falls back to Earth. Circular: Maintains orbit. Escape (parabolic): Reaches escape trajectory. Hyperbolic: High-speed escape. Energy and Trajectory Table: Case Velocity (m/s) Energy \u03b5 Trajectory Suborbital 6500 < 0 Elliptic \u2192 Earth impact Circular ~7660 < 0 Elliptic Orbit Escape ~10800 = 0 Parabolic Escape Hyperbolic 12000 > 0 Hyperbolic Escape \ud83c\udf0d Applications Orbital Insertion: Used in satellite deployment (LEO, MEO, GEO). Space Missions: Escape velocity needed for Mars or interstellar travel. Reentry Capsules: Ensures safe Earth return by choosing suborbital paths. Debris Mitigation: Helps design controlled deorbit burns. \ud83e\udde0 Summary Deliverable Included Equations of motion \u2714 Simulation tool in Python \u2714 Visualization of trajectories \u2714 Classification of motion types \u2714 Real-world applications \u2714","title":"\ud835\udf00"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1 \ud83c\udf0a Problem 1: Interference Patterns on a Water Surface from Point Sources at Regular Polygon Vertices \u2728 Motivation Wave interference on a water surface visually demonstrates how coherent waves interact\u2014leading to constructive interference (amplification) or destructive interference (cancellation). By arranging multiple point sources at the vertices of a regular polygon, we can explore symmetrical and complex interference patterns. Such analysis helps us understand: Wave superposition Phase relationships Applications in acoustics, optics, and antenna design \ud83d\udcd0 Geometry and Wave Model Regular Polygon: Let\u2019s choose a regular pentagon (5 sources). Each source is located at an angle: \ud835\udf03 \ud835\udc56 = 2 \ud835\udf0b \ud835\udc56 \ud835\udc41 , \ud835\udc56 = 0 , 1 , \u2026 , \ud835\udc41 \u2212 1 \u03b8 i \u200b = N 2\u03c0i \u200b ,i=0,1,\u2026,N\u22121 Radius \ud835\udc45 R: distance from center to each vertex. Wave from each source: \ud835\udf02 \ud835\udc56 ( \ud835\udc65 , \ud835\udc66 , \ud835\udc61 ) = \ud835\udc34 cos \u2061 ( \ud835\udc58 \ud835\udc5f \ud835\udc56 \u2212 \ud835\udf14 \ud835\udc61 + \ud835\udf19 ) \u03b7 i \u200b (x,y,t)=Acos(kr i \u200b \u2212\u03c9t+\u03d5) \ud835\udc34 A: Amplitude \ud835\udc58 2 \ud835\udf0b \ud835\udf06 k= \u03bb 2\u03c0 \u200b : Wave number \ud835\udf14 2 \ud835\udf0b \ud835\udc53 \u03c9=2\u03c0f: Angular frequency \ud835\udc5f \ud835\udc56 r i \u200b : Distance from source \ud835\udc56 i to point ( \ud835\udc65 , \ud835\udc66 ) (x,y) \ud835\udf19 \u03d5: Phase (0 for all sources, coherent waves) \ud83e\uddee Python Simulation Code (Interference from Regular Pentagon) \ud83d\udcca Observations Interference Pattern Insights: Constructive Interference: Bright/red or blue regions = maxima/minima in wave displacement. Destructive Interference: Zones where colors cancel = nodes. Symmetry: Matches the regular polygon symmetry (pentagonal). Change Parameters to Explore: Increase number of sources \u2192 more intricate patterns. Adjust radius \ud835\udc45 R \u2192 changes distance and spacing of wavefronts. Try triangle (N=3), square (N=4), or hexagon (N=6) for comparison. \ud83e\udde0 Key Concepts Term Meaning Coherent waves Same frequency and constant phase shift Superposition Sum of displacements at each point Wavefront A line or surface of equal phase Node Destructive interference point (zero \u03b7) \ud83c\udf0d Applications Sonar and radar beam forming Diffraction gratings in optics Loudspeaker arrays Quantum wave interference (multi-slit experiments) \u2705 Deliverables Summary Deliverable Status Wave equations for regular polygon sources \u2714 Simulation script (Python) \u2714 Visualization of interference pattern \u2714 Physical interpretation \u2714 Suggestions for further exploration \u2714","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"\ud83c\udf0a Problem 1: Interference Patterns on a Water Surface from Point Sources at Regular Polygon Vertices \u2728 Motivation Wave interference on a water surface visually demonstrates how coherent waves interact\u2014leading to constructive interference (amplification) or destructive interference (cancellation). By arranging multiple point sources at the vertices of a regular polygon, we can explore symmetrical and complex interference patterns. Such analysis helps us understand: Wave superposition Phase relationships Applications in acoustics, optics, and antenna design \ud83d\udcd0 Geometry and Wave Model Regular Polygon: Let\u2019s choose a regular pentagon (5 sources). Each source is located at an angle: \ud835\udf03 \ud835\udc56 = 2 \ud835\udf0b \ud835\udc56 \ud835\udc41 , \ud835\udc56 = 0 , 1 , \u2026 , \ud835\udc41 \u2212 1 \u03b8 i \u200b = N 2\u03c0i \u200b ,i=0,1,\u2026,N\u22121 Radius \ud835\udc45 R: distance from center to each vertex. Wave from each source: \ud835\udf02 \ud835\udc56 ( \ud835\udc65 , \ud835\udc66 , \ud835\udc61 ) = \ud835\udc34 cos \u2061 ( \ud835\udc58 \ud835\udc5f \ud835\udc56 \u2212 \ud835\udf14 \ud835\udc61 + \ud835\udf19 ) \u03b7 i \u200b (x,y,t)=Acos(kr i \u200b \u2212\u03c9t+\u03d5) \ud835\udc34 A: Amplitude","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#k","text":"2 \ud835\udf0b \ud835\udf06 k= \u03bb 2\u03c0 \u200b : Wave number","title":"\ud835\udc58"},{"location":"1%20Physics/3%20Waves/Problem_1/#_1","text":"2 \ud835\udf0b \ud835\udc53 \u03c9=2\u03c0f: Angular frequency \ud835\udc5f \ud835\udc56 r i \u200b : Distance from source \ud835\udc56 i to point ( \ud835\udc65 , \ud835\udc66 ) (x,y) \ud835\udf19 \u03d5: Phase (0 for all sources, coherent waves) \ud83e\uddee Python Simulation Code (Interference from Regular Pentagon) \ud83d\udcca Observations Interference Pattern Insights: Constructive Interference: Bright/red or blue regions = maxima/minima in wave displacement. Destructive Interference: Zones where colors cancel = nodes. Symmetry: Matches the regular polygon symmetry (pentagonal). Change Parameters to Explore: Increase number of sources \u2192 more intricate patterns. Adjust radius \ud835\udc45 R \u2192 changes distance and spacing of wavefronts. Try triangle (N=3), square (N=4), or hexagon (N=6) for comparison. \ud83e\udde0 Key Concepts Term Meaning Coherent waves Same frequency and constant phase shift Superposition Sum of displacements at each point Wavefront A line or surface of equal phase Node Destructive interference point (zero \u03b7) \ud83c\udf0d Applications Sonar and radar beam forming Diffraction gratings in optics Loudspeaker arrays Quantum wave interference (multi-slit experiments) \u2705 Deliverables Summary Deliverable Status Wave equations for regular polygon sources \u2714 Simulation script (Python) \u2714 Visualization of interference pattern \u2714 Physical interpretation \u2714 Suggestions for further exploration \u2714","title":"\ud835\udf14"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}